% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_comm_matrix.R
\name{create_comm_matrix}
\alias{create_comm_matrix}
\title{Create community composition matrices}
\usage{
create_comm_matrix(
  data,
  rows_var,
  cols_var,
  values_var = NULL,
  relative = FALSE,
  as_matrix = TRUE
)
}
\arguments{
\item{data}{A long-format data frame or data frame extension (e.g. a tibble)}

\item{rows_var}{A string; the variable in \code{data} to be used as rows}

\item{cols_var}{A string; the variable in \code{data} to be used as columns}

\item{values_var}{A string; the variable in \code{data} to be used as values.
If NULL (default) an incidence matrix (presence/absence) is returned}

\item{relative}{Logical; if values should be converted into relative
to the sum in each row. Default to \code{FALSE}}

\item{as_matrix}{Logical; if the function should return a matrix.
Default to \code{TRUE}, if \code{FALSE} will return a data frame}
}
\value{
A matrix or data frame
}
\description{
A generic function to create matrices of community composition, with
flexibility in the choice of variables to use as rows, columns and values
}
\examples{
# Example data including length, abundance and length-weight parameters
# Note that species may have multiple entries per site, which are then summarised
data <- tibble::tribble(
  ~site, ~species, ~length, ~abundance, ~a, ~b,
  "site1", "sp1", 10, 3, 0.02, 2.97,
  "site1", "sp2", 8, 5, 0.01, 2.95,
  "site1", "sp3", 15, 1, 0.02, 2.94,
  "site2", "sp1", 8, 3, 0.02, 2.97,
  "site2", "sp2", 5, 7, 0.01, 2.95,
  "site3", "sp1", 5, 3, 0.02, 2.97,
  "site3", "sp1", 10, 2, 0.02, 2.97,
  "site3", "sp3", 10, 1, 0.02, 2.94,
  "site3", "sp3", 15, 1, 0.02, 2.94
)
# Compute biomass for each row
data <- dplyr::mutate(data,
                      biomass = a*length^b * abundance)
# Incidence
create_comm_matrix(data, "site", "species", NULL)
# Absolute abundance
create_comm_matrix(data, "site", "species", "abundance")
# Relative abundance
create_comm_matrix(data, "site", "species", "abundance", relative = TRUE)
# Absolute biomass
create_comm_matrix(data, "site", "species", "biomass")
# Relative biomass
create_comm_matrix(data, "site", "species", "biomass", relative = TRUE)
}
